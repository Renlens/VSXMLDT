<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Renlen.TranslateFile</name>
    </assembly>
    <members>
        <member name="T:Renlen.TranslateFile.FileSize">
            <summary>
            文件特殊大小的枚举。支持 <see langword="long"/> 类型的大小。
            </summary>
        </member>
        <member name="F:Renlen.TranslateFile.FileSize.NoSize">
            <summary>
            该文件没有大小或获取大小失败
            </summary>
        </member>
        <member name="F:Renlen.TranslateFile.FileSize.Init">
            <summary>
            大小正在初始化
            </summary>
        </member>
        <member name="F:Renlen.TranslateFile.FileSize.Uninit">
            <summary>
            大小未初始化
            </summary>
        </member>
        <member name="T:Renlen.TranslateFile.IReadWrite`1">
            <summary>
            读写接口，表示此类支持到流的自定义读写
            </summary>
            <typeparam name="T">读写类型，通常是此类</typeparam>
        </member>
        <member name="M:Renlen.TranslateFile.IReadWrite`1.GetReadWriter">
            <summary>
            获取与此类关联的读写器
            </summary>
            <returns></returns>
        </member>
        <member name="T:Renlen.TranslateFile.IReadWriter`1">
            <summary>
            指定类型读写到指定流的读写器实现
            </summary>
            <typeparam name="T">要读写对象的类型</typeparam>
        </member>
        <member name="M:Renlen.TranslateFile.IReadWriter`1.Write(System.IO.Stream,`0)">
            <summary>
            将一个 <typeparamref name="T"/> 类型的数据写入到指定流的当前位置，并将位置移动到写入后的末尾。
            </summary>
            <param name="stream">要写入的流</param>
            <param name="o">要写入流的对象</param>
        </member>
        <member name="M:Renlen.TranslateFile.IReadWriter`1.Read(System.IO.Stream)">
            <summary>
            从指定流的当前的位置读取一个 <typeparamref name="T"/> 类型的对象，并将位置移动到读取后的位置。
            </summary>
            <param name="stream">要读取的流</param>
            <returns>从流中读取的对象</returns>
        </member>
        <member name="T:Renlen.TranslateFile.ITranslatingLine">
            <summary>
            表示翻译文件的一次翻译对象
            </summary>
        </member>
        <member name="P:Renlen.TranslateFile.ITranslatingLine.Text">
            <summary>
            即将要翻译的文本。
            </summary>
        </member>
        <member name="P:Renlen.TranslateFile.ITranslatingLine.Code">
            <summary>
            结果代码
            </summary>
        </member>
        <member name="P:Renlen.TranslateFile.ITranslatingLine.Result">
            <summary>
            翻译结果。
            </summary>
        </member>
        <member name="M:Renlen.TranslateFile.ITranslatingLine.CommitResult">
            <summary>
            翻译后调用此方法，用于提交结果
            </summary>
        </member>
        <member name="T:Renlen.TranslateFile.IWillTranslateFile">
            <summary>
            表示一个将要翻译的文件。此类必须有公有无参数构造函数用来辅助创建实例。
            </summary>
        </member>
        <member name="P:Renlen.TranslateFile.IWillTranslateFile.IsPause">
            <summary>
            获取指示此文件是否可以保存，下次继续翻译的值。
            </summary>
        </member>
        <member name="P:Renlen.TranslateFile.IWillTranslateFile.IsContinuous">
            <summary>
            获取指示此文件是否必须按固定顺序提交翻译结果的值。
            </summary>
        </member>
        <member name="P:Renlen.TranslateFile.IWillTranslateFile.IsFile">
            <summary>
            获取指示此文件的源是否是一个磁盘中的文件的值。
            </summary>
        </member>
        <member name="P:Renlen.TranslateFile.IWillTranslateFile.FullPath">
            <summary>
            如果此文件是一个硬盘的文件，则此属性返回文件全路径。否则，应返回文件的标识，以路径的格式。
            </summary>
        </member>
        <member name="P:Renlen.TranslateFile.IWillTranslateFile.IsFromFile">
            <summary>
            表示此类可以从文件创建
            </summary>
        </member>
        <member name="P:Renlen.TranslateFile.IWillTranslateFile.IsFromStream">
            <summary>
            表示此类可以从流创建
            </summary>
        </member>
        <member name="M:Renlen.TranslateFile.IWillTranslateFile.FromFile(System.String)">
            <summary>
            从文件创建一个实例
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Renlen.TranslateFile.IWillTranslateFile.FromStream(System.IO.Stream)">
            <summary>
            从流创建一个实例
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Renlen.TranslateFile.IWillTranslateFile.GetTranslatingLines">
            <summary>
            获取此文件要翻译的所有行。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Renlen.TranslateFile.IWillTranslateFile.GetFileSize">
            <summary>
            获取文件大小
            </summary>
            <returns></returns>
        </member>
        <member name="T:Renlen.TranslateFile.IWillTranslateFileReadWrite">
            <summary>
            保存或读取待翻译翻译的文件。如果待翻译文件支持保存进度下次继续翻译，则待翻译文件必须实现此接口。
            </summary>
        </member>
    </members>
</doc>
